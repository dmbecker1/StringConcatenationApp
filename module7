#include <iostream>
#include <thread>
#include <mutex>

std::mutex cout_mutex;

void count_up() {
    for (int i = 0; i <= 20; ++i) {
        std::lock_guard<std::mutex> lock(cout_mutex);
        std::cout << "Thread 1 (Up): " << i << std::endl;
        std::this_thread::sleep_for(std::chrono::milliseconds(100));
    }
}

void count_down() {
    for (int i = 20; i >= 0; --i) {
        std::lock_guard<std::mutex> lock(cout_mutex);
        std::cout << "Thread 2 (Down): " << i << std::endl;
        std::this_thread::sleep_for(std::chrono::milliseconds(100));
    }
}

int main() {
    std::thread t1(count_up);
    t1.join();

    std::thread t2(count_down);
    t2.join();

    return 0;
}
